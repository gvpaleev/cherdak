{"ast":null,"code":"var _jsxFileName = \"/home/admins/project/client/src/component/sc1/SelectTypePay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TypePayContext from '../../context/TypePayContext.js';\nimport TypeContext from '../../context/TypeContext.js';\nimport axios from \"axios\";\nimport DataContext from '../../context/DataContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FloorTypePay() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TypePay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = FloorTypePay;\n\nfunction TypePay() {\n  _s();\n\n  // const [typePay, setTypePay] = React.useState('');\n  const {\n    typePay,\n    setTypePay\n  } = React.useContext(TypePayContext);\n  const {\n    type,\n    setType\n  } = React.useContext(TypeContext);\n  const [select, setSelect] = useState([]);\n\n  const handleChange = event => {\n    setTypePay(event.target.value);\n  };\n\n  useEffect(() => {\n    async function query() {\n      console.log('query SelectTypePay');\n      let {\n        data\n      } = await axios.get('http://cherdak.fun:3001/api/paytypes');\n      setSelect(data); //console.log(data)\n    }\n\n    query();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: '330px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-autowidth-label\",\n        sx: {\n          color: \"black\"\n        },\n        children: type == 'Sell' ? \"Получаете\" : \"Отдаёте\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-autowidth-label\",\n        id: \"demo-simple-select-autowidth\",\n        value: typePay,\n        onChange: handleChange,\n        autoWidth: true,\n        label: type == 'Sell' ? \"Получаете\" : \"Отдаёте\",\n        sx: {\n          color: \"black\",\n          borderColor: \"black\"\n        },\n        children: select.map(item => {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            children: item\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypePay, \"ZUOEVIRJw9datPR0RzKn1NlWtHI=\");\n\n_c2 = TypePay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FloorTypePay\");\n$RefreshReg$(_c2, \"TypePay\");","map":{"version":3,"names":["React","useState","useEffect","InputLabel","MenuItem","FormControl","Select","TypePayContext","TypeContext","axios","DataContext","FloorTypePay","TypePay","typePay","setTypePay","useContext","type","setType","select","setSelect","handleChange","event","target","value","query","console","log","data","get","m","width","color","borderColor","map","item","Math","random"],"sources":["/home/admins/project/client/src/component/sc1/SelectTypePay.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\n\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport TypePayContext from '../../context/TypePayContext.js';\nimport TypeContext from '../../context/TypeContext.js';\nimport axios from \"axios\";\n\nimport DataContext from '../../context/DataContext.js'\n\n\nexport default function FloorTypePay() {\n  \n  return (\n    <div>\n        <TypePay />\n    </div>\n  );\n}\n\n\n\n\nfunction TypePay() {\n  // const [typePay, setTypePay] = React.useState('');\n  const {typePay,setTypePay} = React.useContext(TypePayContext)\n  const {type,setType} = React.useContext(TypeContext)\n  const [select,setSelect] = useState([])\n\n  const handleChange = (event) => {\n    setTypePay(event.target.value);\n  };\n\n  useEffect(()=>{\n    async function query(){\n      console.log('query SelectTypePay')\n      let {data} = await axios.get('http://cherdak.fun:3001/api/paytypes')\n      setSelect(data)\n      //console.log(data)\n    }\n    query()\n    \n  },[])\n  return (\n    <div>\n      <FormControl sx={{ m: 1,width: '330px'}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" sx={{\n            color: \"black\",\n            \n          }} >{type=='Sell'?\"Получаете\":\"Отдаёте\"}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-autowidth-label\"\n          id=\"demo-simple-select-autowidth\"\n          value={typePay}\n          onChange={handleChange}\n          autoWidth\n          label={type=='Sell'?\"Получаете\":\"Отдаёте\"}\n          sx={{\n            color: \"black\",\n            borderColor:\"black\"\n          }}\n        >\n          {select.map((item)=>{\n            return <MenuItem key={Math.random()} value={item}>{item}</MenuItem>\n          })}\n          {/* <MenuItem value={'Сбербанк'}>Сбербанк</MenuItem>\n          <MenuItem value={'Тиньков'}>Тиньков</MenuItem>\n          <MenuItem value={'QIWI'}>QIWI</MenuItem>\n          <MenuItem value={'YandexMoney'}>YandexMoney</MenuItem> */}\n\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAGA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;;AAGA,eAAe,SAASC,YAAT,GAAwB;EAErC,oBACE;IAAA,uBACI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;KAPuBA,Y;;AAYxB,SAASC,OAAT,GAAmB;EAAA;;EACjB;EACA,MAAM;IAACC,OAAD;IAASC;EAAT,IAAuBd,KAAK,CAACe,UAAN,CAAiBR,cAAjB,CAA7B;EACA,MAAM;IAACS,IAAD;IAAMC;EAAN,IAAiBjB,KAAK,CAACe,UAAN,CAAiBP,WAAjB,CAAvB;EACA,MAAM,CAACU,MAAD,EAAQC,SAAR,IAAqBlB,QAAQ,CAAC,EAAD,CAAnC;;EAEA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;IAC9BP,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;EACD,CAFD;;EAIArB,SAAS,CAAC,MAAI;IACZ,eAAesB,KAAf,GAAsB;MACpBC,OAAO,CAACC,GAAR,CAAY,qBAAZ;MACA,IAAI;QAACC;MAAD,IAAS,MAAMlB,KAAK,CAACmB,GAAN,CAAU,sCAAV,CAAnB;MACAT,SAAS,CAACQ,IAAD,CAAT,CAHoB,CAIpB;IACD;;IACDH,KAAK;EAEN,CATQ,EASP,EATO,CAAT;EAUA,oBACE;IAAA,uBACE,QAAC,WAAD;MAAa,EAAE,EAAE;QAAEK,CAAC,EAAE,CAAL;QAAOC,KAAK,EAAE;MAAd,CAAjB;MAAA,wBACE,QAAC,UAAD;QAAY,EAAE,EAAC,oCAAf;QAAoD,EAAE,EAAE;UACpDC,KAAK,EAAE;QAD6C,CAAxD;QAAA,UAGOf,IAAI,IAAE,MAAN,GAAa,WAAb,GAAyB;MAHhC;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,MAAD;QACE,OAAO,EAAC,oCADV;QAEE,EAAE,EAAC,8BAFL;QAGE,KAAK,EAAEH,OAHT;QAIE,QAAQ,EAAEO,YAJZ;QAKE,SAAS,MALX;QAME,KAAK,EAAEJ,IAAI,IAAE,MAAN,GAAa,WAAb,GAAyB,SANlC;QAOE,EAAE,EAAE;UACFe,KAAK,EAAE,OADL;UAEFC,WAAW,EAAC;QAFV,CAPN;QAAA,UAYGd,MAAM,CAACe,GAAP,CAAYC,IAAD,IAAQ;UAClB,oBAAO,QAAC,QAAD;YAA8B,KAAK,EAAEA,IAArC;YAAA,UAA4CA;UAA5C,GAAeC,IAAI,CAACC,MAAL,EAAf;YAAA;YAAA;YAAA;UAAA,QAAP;QACD,CAFA;MAZH;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD;;GAnDQxB,O;;MAAAA,O"},"metadata":{},"sourceType":"module"}