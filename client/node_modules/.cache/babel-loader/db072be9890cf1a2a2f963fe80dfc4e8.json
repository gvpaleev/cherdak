{"ast":null,"code":"var _jsxFileName = \"/home/admins/project/client/src/component/sc1/SelectTypePay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TypePayContext from '../../context/TypePayContext.js';\nimport TypeContext from '../../context/TypeContext.js';\nimport axios from \"axios\";\nimport DataContext from '../../context/GlobalContext.js';\nimport Scene1Context from '../../context/Scene1Context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TypePay() {\n  _s();\n\n  let dataContext = useContext(DataContext);\n  let scene1Context = useContext(Scene1Context);\n  const {\n    typeRequest,\n    setTypeRequest\n  } = dataContext.typeRequest;\n  const {\n    asset,\n    setAsset\n  } = scene1Context.asset;\n  const {\n    typePay,\n    setTypePay\n  } = scene1Context.typePay;\n  const payTypeFull = JSON.parse(sessionStorage.getItem('payTypeFull')); // const [typePay, setTypePay] = React.useState('');\n\n  const [select, setSelect] = useState([]);\n\n  const handleChange = event => {\n    if (event.target.value == 'Наличные') {\n      sessionStorage.setItem('is_cash', 1);\n    } else {\n      sessionStorage.setItem('is_cash', 0);\n    }\n\n    setTypePay(event.target.value); //sessionStorage.setItem('typePay',event.target.value)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: '330px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-autowidth-label\",\n        sx: {\n          color: \"black\"\n        },\n        children: typeRequest == 'Sell' ? \"Получаете\" : \"Отдаёте\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-autowidth-label\",\n        id: \"demo-simple-select-autowidth\",\n        value: typePay,\n        onChange: handleChange,\n        autoWidth: true,\n        label: typeRequest == 'Sell' ? \"Получаете\" : \"Отдаёте\",\n        sx: {\n          color: \"black\",\n          borderColor: \"black\"\n        },\n        children: Object.keys(payTypeFull).map(item => {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            children: item\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypePay, \"sZxmSx6uDdsiMEZZ9ucVnOuu/II=\");\n\n_c = TypePay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypePay\");","map":{"version":3,"names":["React","useState","useEffect","useContext","InputLabel","MenuItem","FormControl","Select","TypePayContext","TypeContext","axios","DataContext","Scene1Context","TypePay","dataContext","scene1Context","typeRequest","setTypeRequest","asset","setAsset","typePay","setTypePay","payTypeFull","JSON","parse","sessionStorage","getItem","select","setSelect","handleChange","event","target","value","setItem","m","width","color","borderColor","Object","keys","map","item","Math","random"],"sources":["/home/admins/project/client/src/component/sc1/SelectTypePay.js"],"sourcesContent":["import React,{useState,useEffect,useContext} from 'react';\n\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport TypePayContext from '../../context/TypePayContext.js';\nimport TypeContext from '../../context/TypeContext.js';\nimport axios from \"axios\";\n\nimport DataContext from '../../context/GlobalContext.js'\nimport Scene1Context from '../../context/Scene1Context.js'\n\n\n\n\n\n\nexport default function TypePay() {\n  let dataContext = useContext(DataContext) \n  let scene1Context = useContext(Scene1Context)\n  const {typeRequest,setTypeRequest} = dataContext.typeRequest\n\n  const {asset,setAsset} = scene1Context.asset\n  const {typePay,setTypePay} = scene1Context.typePay\n\n  const payTypeFull=JSON.parse(sessionStorage.getItem('payTypeFull'))\n  // const [typePay, setTypePay] = React.useState('');\n\n  const [select,setSelect] = useState([])\n\n  const handleChange = (event) => {\n    if(event.target.value=='Наличные'){\n      sessionStorage.setItem('is_cash',1)\n    }else{\n      sessionStorage.setItem('is_cash',0)\n    }\n    setTypePay(event.target.value);\n    //sessionStorage.setItem('typePay',event.target.value)\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1,width: '330px'}}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\" sx={{\n            color: \"black\",\n            \n          }} >{typeRequest=='Sell'?\"Получаете\":\"Отдаёте\"}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-autowidth-label\"\n          id=\"demo-simple-select-autowidth\"\n          value={typePay}\n          onChange={handleChange}\n          autoWidth\n          label={typeRequest=='Sell'?\"Получаете\":\"Отдаёте\"}\n          sx={{\n            color: \"black\",\n            borderColor:\"black\"\n          }}\n        >\n          {Object.keys(payTypeFull).map((item)=>{\n            return <MenuItem key={Math.random()} value={item}>{item}</MenuItem>\n          })}\n          {/* <MenuItem value={'Сбербанк'}>Сбербанк</MenuItem>\n          <MenuItem value={'Тиньков'}>Тиньков</MenuItem>\n          <MenuItem value={'QIWI'}>QIWI</MenuItem>\n          <MenuItem value={'YandexMoney'}>YandexMoney</MenuItem> */}\n\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,QAAkD,OAAlD;AAGA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAOA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAChC,IAAIC,WAAW,GAAGX,UAAU,CAACQ,WAAD,CAA5B;EACA,IAAII,aAAa,GAAGZ,UAAU,CAACS,aAAD,CAA9B;EACA,MAAM;IAACI,WAAD;IAAaC;EAAb,IAA+BH,WAAW,CAACE,WAAjD;EAEA,MAAM;IAACE,KAAD;IAAOC;EAAP,IAAmBJ,aAAa,CAACG,KAAvC;EACA,MAAM;IAACE,OAAD;IAASC;EAAT,IAAuBN,aAAa,CAACK,OAA3C;EAEA,MAAME,WAAW,GAACC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAX,CAAlB,CARgC,CAShC;;EAEA,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAqB3B,QAAQ,CAAC,EAAD,CAAnC;;EAEA,MAAM4B,YAAY,GAAIC,KAAD,IAAW;IAC9B,IAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAoB,UAAvB,EAAkC;MAChCP,cAAc,CAACQ,OAAf,CAAuB,SAAvB,EAAiC,CAAjC;IACD,CAFD,MAEK;MACHR,cAAc,CAACQ,OAAf,CAAuB,SAAvB,EAAiC,CAAjC;IACD;;IACDZ,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAN8B,CAO9B;EACD,CARD;;EAUA,oBACE;IAAA,uBACE,QAAC,WAAD;MAAa,EAAE,EAAE;QAAEE,CAAC,EAAE,CAAL;QAAOC,KAAK,EAAE;MAAd,CAAjB;MAAA,wBACE,QAAC,UAAD;QAAY,EAAE,EAAC,oCAAf;QAAoD,EAAE,EAAE;UACpDC,KAAK,EAAE;QAD6C,CAAxD;QAAA,UAGOpB,WAAW,IAAE,MAAb,GAAoB,WAApB,GAAgC;MAHvC;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,MAAD;QACE,OAAO,EAAC,oCADV;QAEE,EAAE,EAAC,8BAFL;QAGE,KAAK,EAAEI,OAHT;QAIE,QAAQ,EAAES,YAJZ;QAKE,SAAS,MALX;QAME,KAAK,EAAEb,WAAW,IAAE,MAAb,GAAoB,WAApB,GAAgC,SANzC;QAOE,EAAE,EAAE;UACFoB,KAAK,EAAE,OADL;UAEFC,WAAW,EAAC;QAFV,CAPN;QAAA,UAYGC,MAAM,CAACC,IAAP,CAAYjB,WAAZ,EAAyBkB,GAAzB,CAA8BC,IAAD,IAAQ;UACpC,oBAAO,QAAC,QAAD;YAA8B,KAAK,EAAEA,IAArC;YAAA,UAA4CA;UAA5C,GAAeC,IAAI,CAACC,MAAL,EAAf;YAAA;YAAA;YAAA;UAAA,QAAP;QACD,CAFA;MAZH;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD;;GAtDuB9B,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}